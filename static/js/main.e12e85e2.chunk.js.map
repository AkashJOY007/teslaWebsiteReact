{"version":3,"sources":["logo.svg","features/counter/counterAPI.js","features/counter/counterSlice.js","features/car/carSlice.js","components/Header.js","components/Section.js","components/Home.js","App.js","app/store.js","serviceWorker.js","index.js","features/counter/Counter.module.css"],"names":["fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","carSlice","cars","selectcars","car","Header","useState","burgerStatus","setBurgerStatus","useSelector","console","log","Container","src","map","index","href","RightMenu","CustomMenu","onClick","BurgerNav","class","show","CloseWrapper","CustomClose","styled","div","Menu","MenuIcon","props","CloseIcon","Section","title","description","leftBtnText","rightBtnText","backgroundImg","Wrap","bgImage","bottom","ItemText","Buttons","ButtonGroup","LeftButton","RightButton","DownArrow","img","Home","App","className","store","configureStore","reducer","carReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e12e85e2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b2e5a01e.svg\";","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import {createSlice} from \"@reduxjs/toolkit\"\r\n\r\nconst initialState = {\r\n    cars:[\"Model-S\",\"Mode-3\",\"Model-X\",\"Model-Y\"]\r\n}\r\n\r\nconst carSlice = createSlice({\r\n    name:\"car\",\r\n    initialState,\r\n    reducers:{}\r\n})\r\nexport const selectcars = state=>state.car.cars\r\nexport default carSlice.reducer","import React,{useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {selectcars} from \"../features/car/carSlice\";\r\nimport {useSelector} from 'react-redux';\r\nfunction Header() {\r\n    const[burgerStatus,setBurgerStatus] = useState(false);\r\n    const cars =useSelector(selectcars)\r\n    console.log(cars);\r\n    return (\r\n        <Container>\r\n        <a>\r\n        <img src = \"/images/logo.svg\"/>\r\n        </a>\r\n        <Menu>\r\n        {cars && cars.map(((car,index)=>\r\n            <a key={index}href=\"#\">{car}</a>\r\n        ))}\r\n        </Menu>\r\n        <RightMenu>\r\n            <a href=\"#\">Shop</a>\r\n            <a href=\"#\">Tesla Account</a>\r\n            <CustomMenu onClick={()=>setBurgerStatus(true)}/>\r\n        </RightMenu>\r\n            <BurgerNav class = \"b\" show={burgerStatus}>\r\n                <CloseWrapper>\r\n                <CustomClose onClick={()=>setBurgerStatus(false)}/>\r\n                </CloseWrapper>\r\n                \r\n                <li class = \"a1\"><a href=\"#\">Trade-In</a></li>\r\n                <li class = \"a1\"><a href=\"#\">Model-A</a></li>\r\n                <li class = \"a1\"><a href=\"#\">Cyber-Truck</a></li>\r\n                <li class = \"a1\"><a href=\"#\">Exisiting</a></li>\r\n                <li class = \"a1\"><a href=\"#\">Anonymous</a></li>\r\n                <li class = \"a1\"><a href=\"#\">Inventory</a></li>\r\n\r\n            \r\n            </BurgerNav>\r\n        \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Header\r\nconst Container = styled.div`\r\nmin-height:60px;\r\nposition:fixed;\r\ndisplay:flex;\r\nalign-items:center;\r\npadding:0 20px;\r\ntop:0;\r\nleft:0;\r\nright:0;\r\njustify-content:space-between;\r\nz-index:1;\r\n`\r\nconst Menu = styled.div`\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content:center;\r\nflex:1;\r\n@media(max-width:768px){\r\n    display:none;\r\n}\r\na{\r\n    font-weight:600;\r\n    text-transform:uppercase;\r\n    padding:0 10px;//for two values means (top,bottom) & (left,right)\r\n    flex-Wrap:nowrap;\r\n}\r\n`\r\nconst RightMenu = styled.div`\r\ndisplay:flex;\r\nalign-items:center;\r\na{\r\n    font-weight:600;\r\n    text-transform:uppercase;\r\n    ${'' /* padding:0 10px;//for two values means (top,bottom) & (left,right) */}\r\n    flex-Wrap:nowrap;\r\n    margin-right:10px;\r\n}\r\n`\r\nconst CustomMenu  = styled(MenuIcon)`\r\ncursor:pointer;\r\n\r\n`\r\nconst BurgerNav = styled.div`\r\n    position:fixed;\r\n    top:0;\r\n    bottom:0;\r\n    right:0;\r\n    background:darkSalmon;\r\n    width:300px;\r\n    z-index:10;\r\n    list-style:none;\r\n    paddding:20px;\r\n    display:flex;\r\n    flex-direction:column;\r\n    text-align:start;\r\n    transform:${props=> props.show? 'translateX(0)':'translateX(100%)'};\r\n    transition:transform 0.3s;\r\n    li{\r\n        padding:15px 0;\r\n        border-bottom:1px solid black;\r\n        a{\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`\r\nconst CustomClose = styled(CloseIcon)`\r\ncursor:pointer;\r\n`\r\nconst CloseWrapper = styled.div`\r\n    display:flex;\r\n    justify-content:flex-end;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Fade from 'react-reveal/Fade';\r\nfunction Section({ title, description, leftBtnText, rightBtnText, backgroundImg }) {\r\n    // console.log(props);\r\n\r\n    return (\r\n        <Wrap bgImage={backgroundImg}>\r\n            <Fade bottom>\r\n                <ItemText>\r\n                    <h1>{title}</h1>\r\n                    <p>{description}</p>\r\n                </ItemText>\r\n            </Fade>\r\n            <Buttons>\r\n                <Fade bottom>\r\n                    <ButtonGroup>\r\n                        <LeftButton>\r\n                            {leftBtnText}\r\n                        </LeftButton>\r\n                        {rightBtnText && <RightButton>\r\n                            {rightBtnText}\r\n                        </RightButton>}\r\n                        \r\n                    </ButtonGroup>\r\n                </Fade>\r\n                <DownArrow src=\"images/down-arrow.svg\" />\r\n            </Buttons>\r\n        </Wrap>\r\n    )\r\n}\r\n\r\nexport default Section\r\nconst Wrap = styled.div`\r\nz-index:10;\r\nwidth:100vw;\r\nheight:100vh;\r\nbackground-size:cover;\r\nbackground-position:center;\r\nbackground-repeat:no-repeat;\r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content:space-between;//for vertical aligments\r\nalign-items:center;//horizontal\r\nbackground-image:${props => `url(\"/images/${props.bgImage}\")`}\r\n`\r\nconst ItemText = styled.div`\r\npadding-top:15vh;\r\ntext-align:center;\r\np{\r\n    color:black;\r\n    cursor:pointer;\r\n    text-decoration:underline;\r\n    font-weight:Bold;\r\n\r\n}\r\n`\r\nconst ButtonGroup = styled.div`\r\ndisplay:flex;\r\nmargin-bottom:30px;\r\n@media (max-width:768px){\r\n    flex-direction:column;\r\n}\r\n`\r\nconst LeftButton = styled.div`\r\nbackground-color:rgba(23,26,32,0.8);\r\nheight:40px;\r\nwidth:256px;\r\ncolor:white;\r\ndisplay:flex;\r\njustify-content:center;\r\nalign-items:center;\r\nborder-radius:100px;\r\nopacity:0.85;\r\ntext-transform:uppercase;\r\nfont-size:12px;\r\ncursor:pointer;\r\nmargin:8px;\r\n`\r\nconst RightButton = styled(LeftButton)`\r\nbackground:white;\r\nopacity:0.65;\r\ncolor:black;\r\n`\r\nconst DownArrow = styled.img`\r\nmargin-top:20px;\r\nheight:40px;\r\noverflow-x:hidden;\r\nanimation:animationDown infinite 1.5s;\r\n`\r\nconst Buttons = styled.div`\r\n\r\n`","import React from 'react'\r\nimport styled from \"styled-components\"\r\nimport Section from \"./Section\"\r\nfunction Home() {\r\n    return (\r\n        <Container>\r\n            <Section \r\n                title=\"Model-S\"\r\n                description=\"Order-online for Touchless Delivery\"\r\n                backgroundImg=\"model-s.jpg\"\r\n                leftBtnText= \"Custom order\"\r\n                rightBtnText = \"Exisiting Inventory\"\r\n            />\r\n            <Section \r\n                title=\"Model-Y\"\r\n                description=\"Order-online for Touchless Delivery \"\r\n                backgroundImg=\"model-y.jpg\"\r\n                leftBtnText=\"Custom order\"\r\n                rightBtnText=\"Exisiting Inventory\"\r\n            />\r\n            <Section \r\n                title=\"Model-3\"\r\n                description=\"Order-online for Touchless Delivery \"\r\n                backgroundImg=\"model-3.jpg\"\r\n                leftBtnText=\"Custom order\"\r\n                rightBtnText=\"Exisiting Inventory\"\r\n            />\r\n            <Section \r\n                title=\"Model-x\"\r\n                description=\"Order-online for Touchless Delivery \"\r\n                backgroundImg=\"model-x.jpg\"\r\n                leftBtnText=\"Custom order\"\r\n                rightBtnText=\"Exisiting Inventory\"\r\n            />\r\n            <Section \r\n                title=\"Lowest Cost Solar Panel\"\r\n                description=\"Money Back Guaranteed!!! \"\r\n                backgroundImg=\"solar-panel.jpg\"\r\n                leftBtnText=\"Order now\"\r\n                rightBtnText=\"Learn More!\"\r\n            />\r\n            <Section\r\n                title=\"Lowest Cost Solar Roof\"\r\n                description=\"Money Back Guaranteed!!! \"\r\n                backgroundImg=\"solar-roof.jpg\"\r\n                leftBtnText=\"Order now\"\r\n                rightBtnText=\"Learn More!\"\r\n            />\r\n            <Section\r\n                title=\"Accessories\"\r\n                description=\"\"\r\n                backgroundImg=\"accessories.jpg\"\r\n                leftBtnText=\"Order now\"\r\n                \r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home\r\nconst Container = styled.div`\r\nheight:100vh;\r\n`","import React from 'react';\nimport logo from './logo.svg';\nimport { Counter } from './features/counter/Counter';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\n// import counterReducer from '../features/counter/counterSlice';\nimport carReducer from \"../features/car/carSlice\"\nexport const store = configureStore({\n  reducer: {\n    car:carReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__2p_yq\",\"value\":\"Counter_value__1FMnb\",\"button\":\"Counter_button__2Jf0U\",\"textbox\":\"Counter_textbox__3ONYf\",\"asyncButton\":\"Counter_asyncButton__8kcvP Counter_button__2Jf0U\"};"],"sourceRoot":""}